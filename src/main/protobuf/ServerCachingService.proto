/*******************************************************************************
 * Copyright (c) 2013, Salesforce.com, Inc.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *     Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *     Neither the name of Salesforce.com nor the names of its contributors may 
 *     be used to endorse or promote products derived from this software without 
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/

option java_package = "com.salesforce.phoenix.coprocessor.generated";
option java_outer_classname = "ServerCachingProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

import "ServerCacheFactory.proto";

message ImmutableBytesWritable {
  required bytes byteArray = 1;
  required int32 offset = 2;
  required int32 length = 3;
}

message AddServerCacheRequest {
  optional bytes tenantId = 1;
  required bytes cacheId  = 2;
  required ImmutableBytesWritable cachePtr = 3;
  required ServerCacheFactory cacheFactory = 4;
}

message AddServerCacheResponse {
  required bool return = 1;
}

message RemoveServerCacheRequest {
  optional bytes tenantId = 1;
  required bytes cacheId  = 2;
}

message RemoveServerCacheResponse {
  required bool return = 1;
}

service ServerCachingService {
  rpc addServerCache(AddServerCacheRequest)
    returns (AddServerCacheResponse);

  rpc removeServerCache(RemoveServerCacheRequest)
    returns (RemoveServerCacheResponse);
}
